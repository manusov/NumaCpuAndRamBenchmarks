31.08.2019 (v1.04.01 version, updated ia32 only).
1) NUMA nodes affinity masks visualized as 64-bit values,
fix mismatch bug with 32-bit loads for list of 64-bit values.
Updated source file:
sysparmstobuffer.inc , see lines 187, 193 (ia32 branch only).
2) Fix NUMA-aware memory allocation bug, correct stack
variables addressing at threads per node counter.
Updated source file:
buildthreadslist.inc , see lines 150, 151 (ia32 branch only).


29.08.2019 (v1.04.00 versions for ia32 and x64).
1) Thread termination constant delay replaced to
wait thread termination with thread handle.
This for measurement threads and GUI service threads.
2) Remove delay subroutine and unused additional
entry point to thread start subroutine.


23.08.2019 (v1.03.01 versions for ia32 and x64).
1) Thread termination delay UNDER DEBUG.
2) Fix visual NUMA options state for drawings window, 
fix bug = "NUMA remote" variant visualized as empty string.
x64:  drawsessionstart.inc , see line 128.
ia32: drawsessionstart.inc , see line 126.


21.08.2019 (v1.03.00 versions for ia32 and x64).
1) Thread termination delay UNDER DEBUG.
2) Update subroutine SessionStart: 
2.1) Change threads count assignment for single domain mode:
old: all logical processors
new: logical processors, selected by node 0 affinity mask.
2.2) Change memory per node count:
if single thread mode, nodes count can be > 1 but single node
used, skip division by node count, allocate all buffers at
node 0.
x64:  sessionstart.inc , see lines 327, 375.
ia32: sessionstart.inc , see lines 328, 377.



19.08.2019 (v1.02.39 versions for ia32 and x64).
Thread termination delay at subroutine DelayThreadReturn
changed UNDER DEBUG.

ia32 version, old value ECX = 100000h, 
not changed, still one delay subroutine.

x64 version,  old value ECX = 1400000h,
new values for 2 delay subroutines
ECX = 100000h for window close/destroy and window resize (win1.inc).
ECX = 1400000h for target routines thread (releasethreadlist.inc)



18.08.2019 (v1.02.38 versions for ia32 and x64).
Thread termination delay at subroutine DelayThreadReturn
changed UNDER DEBUG.
ia32 version, old value ECX = 100000h, not changed.
x64 version,  old value ECX = 100000h, new value ECX = 1400000h


18.08.2019 (v1.02.37 versions for ia32 and x64).
1) Update subroutine BuildNumaNodesList. 
Bug fixed: if logical CPU count above 8, and NUMA-unaware mode selected,
routine can return NUMA domains count = XXXXXX01h, required 00000001h.
Because used:  MOV AL,1 
required: MOV EAX,1
2) YET IN PROGRESS: time sensitive bug fix at ReleaseThreadsList subroutine.


03.08.2019 (v1.02.36 versions for ia32 and x64).
Make thread callback routines compliant to Microsoft calling conventions,
fix context save-restore and output parameters bugs at thread callback routines.
1) Save XMM6-XMM15 is not required for ia32, by ia32 calling convention.
2) Save XMM6-XMM15 is required for x64, by x64 calling convention.
3) Save XMM6-XMM15 is required for primary thread routine
   threads_manager\threadroutine.inc, 
   because SSE registers used and changed after call RunTarget subroutine.
4) Save XMM6-XMM15 is not required for secondary thread routine
   gui\drawsessionthread.inc,
   because SSE registers saved by primary routine and no additional usages.
5) Make this both for No Processor Groups and Processor Groups branches.
6) If validated by SSE flag (not AVX) 
   use SSE instructions only for context save-restore:
   MOVAPS possible
   MOVAPD not possible, because SSE2
   VMOVAPD not possible, because AVX.
7) SSE absence can be modeling for validation by:
   system_info\getcpufeatures.inc, Line 77
   bt edx,25
   this detects SSE support.
8) Clear output status (EAX/RAX=0) required for both ia32 and x64.
   gui\drawsessionthread.inc.


01.08.2019 (v1.02.35 versions for ia32 and x64).
Bug fix: Use processor groups checkbox not clear when set defaults.
Bug fix: Unpredictable write data value at some ia32 write methods
implementations. This important for data-sensitive performance,
for example if platform use pack at data path.


10.07.2019 (v1.02.34 versions for ia32 and x64).
Fix thread routine return bug, terminate thread only after routine return.
Add delays after termination primary measurement threads and
after termination GUI scenario secondary measurement thread:
for primary termination (1), for drawing window exit (2) and resize (3).
3 points with added software-controlled delay.
This bug was detected at ASUS P5KPL-VM with Pentium Dual E2160
as hang when press "Resize" button at drawing window.


20.06.2019 (v1.02.31)
Experimental start ia32 support.


15.06.2019 (v1.02.30)
Add branch for ia32 support.
Change directories names.


v1.02.25 - v1.02.27
Some optimizations at drawings window GUI.
Some "TODO" fixed.
Other "TODO" moved to separate document, for source readability.


v1.02.00 - v1.02.24
Start generation 2, tagged "experimental".
Redesign.
GUI changes.
Add latency measurement.
Add MMX instructions support.
Add approximation and adaptive modes.


v1.01.15
Fix wrong input parameter:
Parm#2 = RDX = Pointer to PAINTSTRUCT structure
before WinAPI call:
call [EndPaint]


v1.01.14
Fix NUMA highest node detection bug:
check WinAPI-updated QWORD variable instead DWORD variable.


v1.01.13
Integrate debug features:
Template debug, Application debug, Window debug.


v1.01.11
Fix parameters shadow bug.


v1.01.10
Fix bug: large pages mode flag can be corrupted at
NUMA memory allocation branch.
Some internal optimizations.
Improve comments.


v1.01.09
Update affinitization restrictions for single thread.
Some code locked, under debug.


v1.01.08
Update FMA tests:
FMA256 optimizing horizontal additions phase.
FMA512 bug fix and optimizing horizontal additions phase.
Main "hot cycle" not changed.


v1.01.07
Optimize SSE tests code size:
use MOVAPS instead MOVAPD,
use MOVNTPS instead MOVNTPD.


v1.01.06
Restrict threads affinitization if Hyper-Threading or SMT
supported by platform but not enabled by test option settings.


v1.01.05
Improve code comments.
Internal changes for support Processor Groups
and platform with above 64 logical processors.
This feature yet locked.
Some code optimization, remove unused performance
patterns.


v1.01.00
Experimental unlock numa-aware support.


v1.00.00
Improve code comments.
Add Vector Brief test.


v0.99.0
Disable branches with MOVNTDQA/VMOVNTDQA instructions.
Always use PREFETCHNTA non-temporal hint for DRAM read.


v0.98.5
Fix Y-approximation bug at drawings speed=f(size).


v0.98.4
Add visual number of threads and large page modes
for drawings window, speed=f(size).


v0.98.3
Large pages support.


v0.98.2
Improve assembler method details visualization,
for simple text window and for drawings speed=f(size).


v0.98.1
Non-temporal read optimization for DRAM benchmarks.
Use PREFETCHNTA if MOVNTDQA not supported,
actual for AM2 CPUs.


v0.98.0
Threads management redesign.
Under debug. 
Multi-Socket NUMA-optimization yet locked at this debug version.


v0.97
Improve code comments.


v0.96
Fix RAM Read benchmark error if SSE4.1 not supported,
cause: SSE4.1 and non-temporal read feature detection bug.

